{
   "type": "object",
   "properties": {
      "pdbx_struct_assembly": {
         "type": "object",
         "properties": {
            "details": {
               "type": "string",
               "examples": [
                  "The icosahedral virus particle."
               ],
               "description": "A description of special aspects of the macromolecular assembly."
            },
            "id": {
               "type": "string",
               "description": "The value of _pdbx_struct_assembly.id must uniquely identify a record in\n the PDBX_STRUCT_ASSEMBLY list."
            },
            "method_details": {
               "type": "string",
               "description": "Provides details of the method used to determine or\n compute the assembly."
            },
            "oligomeric_count": {
               "type": "integer",
               "description": "The number of polymer molecules in the assembly."
            },
            "oligomeric_details": {
               "type": "string",
               "examples": [
                  "monomer",
                  "octameric",
                  "tetradecameric",
                  "eicosameric",
                  "21-meric",
                  "60-meric",
                  "180-meric",
                  "helical"
               ],
               "description": "Provides the details of the oligomeric state of the assembly."
            },
            "rcsb_candidate_assembly": {
               "type": "string",
               "enum": [
                  "Y",
                  "N"
               ],
               "examples": [
                  "Y"
               ],
               "description": "Candidate macromolecular assembly.\n\n Excludes the following cases classified in pdbx_struct_asembly.details:\n\n 'crystal asymmetric unit', 'crystal asymmetric unit, crystal frame', 'helical asymmetric unit',\n 'helical asymmetric unit, std helical frame','icosahedral 23 hexamer', 'icosahedral asymmetric unit',\n 'icosahedral asymmetric unit, std point frame','icosahedral pentamer', 'pentasymmetron capsid unit',\n 'point asymmetric unit', 'point asymmetric unit, std point frame','trisymmetron capsid unit',\n  and 'deposited_coordinates'."
            },
            "rcsb_details": {
               "type": "string",
               "enum": [
                  "author_defined_assembly",
                  "author_and_software_defined_assembly",
                  "software_defined_assembly"
               ],
               "examples": [
                  "author_and_software_defined_assembly"
               ],
               "description": "A filtered description of the macromolecular assembly."
            }
         },
         "required": [
            "id"
         ],
         "additionalProperties": false
      },
      "pdbx_struct_assembly_auth_evidence": {
         "type": "array",
         "items": {
            "type": "object",
            "properties": {
               "assembly_id": {
                  "type": "string",
                  "description": "This item references an assembly in pdbx_struct_assembly"
               },
               "details": {
                  "type": "string",
                  "description": "Provides any additional information regarding the evidence of this assembly"
               },
               "experimental_support": {
                  "type": "string",
                  "enum": [
                     "native gel electrophoresis",
                     "equilibrium centrifugation",
                     "surface plasmon resonance",
                     "light scattering",
                     "immunoprecipitation",
                     "cross-linking",
                     "homology",
                     "scanning transmission electron microscopy",
                     "gel filtration",
                     "mass spectrometry",
                     "assay for oligomerization",
                     "fluorescence resonance energy transfer",
                     "none",
                     "SAXS",
                     "microscopy",
                     "isothermal titration calorimetry"
                  ],
                  "description": "Provides the experimental method to determine the state of this assembly"
               },
               "id": {
                  "type": "string",
                  "description": "Identifies a unique record in pdbx_struct_assembly_auth_evidence."
               }
            },
            "required": [
               "assembly_id",
               "id"
            ],
            "additionalProperties": false
         },
         "minItems": 1,
         "uniqueItems": true
      },
      "pdbx_struct_assembly_gen": {
         "type": "array",
         "items": {
            "type": "object",
            "properties": {
               "assembly_id": {
                  "type": "string",
                  "description": "This data item is a pointer to _pdbx_struct_assembly.id in the\n PDBX_STRUCT_ASSEMBLY category."
               },
               "asym_id_list": {
                  "type": "array",
                  "items": {
                     "type": "string",
                     "description": "This data item is a pointer to _struct_asym.id in\n the STRUCT_ASYM category.\n\n This item may be expressed as a comma separated list of identifiers."
                  },
                  "uniqueItems": false
               },
               "oper_expression": {
                  "type": "string",
                  "examples": [
                     "(1)",
                     "(1,2,5)",
                     "(1-60)",
                     "(1-60)(61)"
                  ],
                  "description": "Identifies the operation of collection of operations\n from category PDBX_STRUCT_OPER_LIST.\n\n Operation expressions may have the forms:\n\n  (1)        the single operation 1\n  (1,2,5)    the operations 1, 2, 5\n  (1-4)      the operations 1,2,3 and 4\n  (1,2)(3,4) the combinations of operations\n             3 and 4 followed by 1 and 2 (i.e.\n             the cartesian product of parenthetical\n             groups applied from right to left)\n"
               },
               "ordinal": {
                  "type": "integer",
                  "description": "This data item is an ordinal index for the\n PDBX_STRUCT_ASSEMBLY category."
               }
            },
            "required": [
               "ordinal"
            ],
            "additionalProperties": false
         },
         "minItems": 1,
         "uniqueItems": true
      },
      "pdbx_struct_assembly_prop": {
         "type": "array",
         "items": {
            "type": "object",
            "properties": {
               "biol_id": {
                  "type": "string",
                  "description": "The identifier for the assembly used in category PDBX_STRUCT_ASSEMBLY."
               },
               "type": {
                  "type": "string",
                  "enum": [
                     "ABSA (A^2)",
                     "SSA (A^2)",
                     "MORE"
                  ],
                  "description": "The property type for the assembly."
               },
               "value": {
                  "type": "string",
                  "description": "The value of the assembly property."
               }
            },
            "required": [
               "biol_id",
               "type"
            ],
            "additionalProperties": false
         },
         "minItems": 1,
         "uniqueItems": true
      },
      "pdbx_struct_oper_list": {
         "type": "array",
         "items": {
            "type": "object",
            "properties": {
               "id": {
                  "type": "string",
                  "description": "This identifier code must uniquely identify a\n record in the PDBX_STRUCT_OPER_LIST list."
               },
               "matrix_1_1": {
                  "type": "number",
                  "description": "The [1][1] element of the 3x3 matrix component of the\n transformation operation."
               },
               "matrix_1_2": {
                  "type": "number",
                  "description": "The [1][2] element of the 3x3 matrix component of the\n transformation operation."
               },
               "matrix_1_3": {
                  "type": "number",
                  "description": "The [1][3] element of the 3x3 matrix component of the\n transformation operation."
               },
               "matrix_2_1": {
                  "type": "number",
                  "description": "The [2][1] element of the 3x3 matrix component of the\n transformation operation."
               },
               "matrix_2_2": {
                  "type": "number",
                  "description": "The [2][2] element of the 3x3 matrix component of the\n transformation operation."
               },
               "matrix_2_3": {
                  "type": "number",
                  "description": "The [2][3] element of the 3x3 matrix component of the\n transformation operation."
               },
               "matrix_3_1": {
                  "type": "number",
                  "description": "The [3][1] element of the 3x3 matrix component of the\n transformation operation."
               },
               "matrix_3_2": {
                  "type": "number",
                  "description": "The [3][2] element of the 3x3 matrix component of the\n transformation operation."
               },
               "matrix_3_3": {
                  "type": "number",
                  "description": "The [3][3] element of the 3x3 matrix component of the\n transformation operation."
               },
               "name": {
                  "type": "string",
                  "examples": [
                     "1_555",
                     "two-fold rotation"
                  ],
                  "description": "A descriptive name for the transformation operation."
               },
               "symmetry_operation": {
                  "type": "string",
                  "examples": [
                     "x,y,z",
                     "x+1/2,y,-z"
                  ],
                  "description": "The symmetry operation corresponding to the transformation operation."
               },
               "type": {
                  "type": "string",
                  "enum": [
                     "3D crystal symmetry operation",
                     "build helical asymmetric unit",
                     "transform to 2D crystal frame",
                     "transform to point frame",
                     "transform to helical frame",
                     "transform to crystal frame",
                     "build 3D crystal asymmetric unit",
                     "crystal symmetry operation",
                     "2D crystal symmetry operation",
                     "transform to 3D crystal frame",
                     "identity operation",
                     "point symmetry operation",
                     "build 2D crystal asymmetric unit",
                     "helical symmetry operation",
                     "build point asymmetric unit"
                  ],
                  "description": "A code to indicate the type of operator."
               },
               "vector_1": {
                  "type": "number",
                  "description": "The [1] element of the three-element vector component of the\n transformation operation."
               },
               "vector_2": {
                  "type": "number",
                  "description": "The [2] element of the three-element vector component of the\n transformation operation."
               },
               "vector_3": {
                  "type": "number",
                  "description": "The [3] element of the three-element vector component of the\n transformation operation."
               }
            },
            "required": [
               "id"
            ],
            "additionalProperties": false
         },
         "minItems": 1,
         "uniqueItems": true
      },
      "rcsb_assembly_container_identifiers": {
         "type": "object",
         "properties": {
            "assembly_id": {
               "type": "string",
               "description": "Assembly identifier for the container."
            },
            "entry_id": {
               "type": "string",
               "description": "Entry identifier for the container."
            }
         },
         "required": [
            "assembly_id",
            "entry_id"
         ],
         "additionalProperties": false
      },
      "rcsb_assembly_info": {
         "type": "array",
         "items": {
            "type": "object",
            "properties": {
               "assembly_id": {
                  "type": "string",
                  "description": "Entity identifier for the container."
               },
               "atom_count": {
                  "type": "integer",
                  "description": "The assembly atomic coordinate count."
               },
               "branched_atom_count": {
                  "type": "integer",
                  "description": "The assembly branched entity atomic coordinate count."
               },
               "branched_entity_count": {
                  "type": "integer",
                  "description": "The number of distinct branched entities in the generated assembly."
               },
               "branched_entity_instance_count": {
                  "type": "integer",
                  "description": "The number of branched instances in the generated assembly data set.\n This is the total count of branched entity instances generated in the assembly coordinate data."
               },
               "entry_id": {
                  "type": "string",
                  "description": "The PDB entry accession code."
               },
               "modeled_polymer_monomer_count": {
                  "type": "integer",
                  "description": "The number of modeled polymer monomers in the assembly coordinate data.\n This is the total count of monomers with reported coordinate data for all polymer\n entity instances in the generated assembly coordinate data."
               },
               "na_polymer_entity_types": {
                  "type": "string",
                  "enum": [
                     "RNA (only)",
                     "DNA/RNA (only)",
                     "NA-hybrid (only)",
                     "Other",
                     "DNA (only)"
                  ],
                  "description": "Nucleic acid polymer entity type categories describing the generated assembly."
               },
               "nonpolymer_atom_count": {
                  "type": "integer",
                  "description": "The assembly non-polymer entity atomic coordinate count."
               },
               "nonpolymer_entity_count": {
                  "type": "integer",
                  "description": "The number of distinct non-polymer entities in the generated assembly exclusive of solvent."
               },
               "nonpolymer_entity_instance_count": {
                  "type": "integer",
                  "description": "The number of non-polymer instances in the generated assembly data set exclusive of solvent.\n This is the total count of non-polymer entity instances generated in the assembly coordinate data."
               },
               "polymer_atom_count": {
                  "type": "integer",
                  "description": "The assembly polymer entity atomic coordinate count."
               },
               "polymer_composition": {
                  "type": "string",
                  "enum": [
                     "protein/oligosaccharide",
                     "DNA/RNA",
                     "protein/NA/oligosaccharide",
                     "RNA",
                     "protein/NA",
                     "NA-hybrid",
                     "other type composition",
                     "homomeric protein",
                     "heteromeric protein",
                     "other",
                     "other type pair",
                     "oligosaccharide",
                     "DNA",
                     "NA/oligosaccharide"
                  ],
                  "description": "Categories describing the polymer entity composition for the generated assembly."
               },
               "polymer_entity_count": {
                  "type": "integer",
                  "description": "The number of distinct polymer entities in the generated assembly."
               },
               "polymer_entity_count_DNA": {
                  "type": "integer",
                  "description": "The number of distinct DNA polymer entities in the generated assembly."
               },
               "polymer_entity_count_RNA": {
                  "type": "integer",
                  "description": "The number of distinct RNA polymer entities in the generated assembly."
               },
               "polymer_entity_count_nucleic_acid": {
                  "type": "integer",
                  "description": "The number of distinct nucleic acid polymer entities (DNA or RNA) in the generated assembly."
               },
               "polymer_entity_count_nucleic_acid_hybrid": {
                  "type": "integer",
                  "description": "The number of distinct hybrid nucleic acid polymer entities in the generated assembly."
               },
               "polymer_entity_count_protein": {
                  "type": "integer",
                  "description": "The number of distinct protein polymer entities in the generated assembly."
               },
               "polymer_entity_instance_count": {
                  "type": "integer",
                  "description": "The number of polymer instances in the generated assembly data set.\n This is the total count of polymer entity instances generated in the assembly coordinate data."
               },
               "polymer_entity_instance_count_DNA": {
                  "type": "integer",
                  "description": "The number of DNA polymer instances in the generated assembly data set.\n This is the total count of DNA polymer entity instances generated in the assembly coordinate data."
               },
               "polymer_entity_instance_count_RNA": {
                  "type": "integer",
                  "description": "The number of RNA polymer instances in the generated assembly data set.\n This is the total count of RNA polymer entity instances generated in the assembly coordinate data."
               },
               "polymer_entity_instance_count_nucleic_acid": {
                  "type": "integer",
                  "description": "The number of nucleic acid polymer instances in the generated assembly data set.\n This is the total count of nucleic acid polymer entity instances generated in the assembly coordinate data."
               },
               "polymer_entity_instance_count_nucleic_acid_hybrid": {
                  "type": "integer",
                  "description": "The number of hybrid nucleic acide polymer instances in the generated assembly data set.\n This is the total count of hybrid nucleic acid polymer entity instances generated in the assembly coordinate data."
               },
               "polymer_entity_instance_count_protein": {
                  "type": "integer",
                  "description": "The number of protein polymer instances in the generated assembly data set.\n This is the total count of protein polymer entity instances generated in the assembly coordinate data."
               },
               "polymer_monomer_count": {
                  "type": "integer",
                  "description": "The number of polymer monomers in sample entity instances comprising the assembly data set.\n This is the total count of monomers for all polymer entity instances\n in the generated assembly coordinate data."
               },
               "selected_polymer_entity_types": {
                  "type": "string",
                  "enum": [
                     "Other",
                     "Protein (only)",
                     "Protein/NA",
                     "Nucleic acid (only)"
                  ],
                  "description": "Selected polymer entity type categories describing the generated assembly."
               },
               "solvent_atom_count": {
                  "type": "integer",
                  "description": "The assembly solvent atomic coordinate count."
               },
               "solvent_entity_count": {
                  "type": "integer",
                  "description": "The number of distinct solvent entities in the generated assembly."
               },
               "solvent_entity_instance_count": {
                  "type": "integer",
                  "description": "The number of solvent instances in the generated assembly data set.\n This is the total count of solvent entity instances generated in the assembly coordinate data."
               },
               "unmodeled_polymer_monomer_count": {
                  "type": "integer",
                  "description": "The number of unmodeled polymer monomers in the assembly coordinate data. This is\n the total count of monomers with unreported coordinate data for all polymer\n entity instances in the generated assembly coordinate data."
               }
            },
            "required": [
               "entry_id"
            ],
            "additionalProperties": false
         },
         "minItems": 1,
         "uniqueItems": true
      },
      "rcsb_load_status": {
         "type": "object",
         "properties": {
            "datablock_name": {
               "type": "string",
               "description": "Source data block containing the loaded data set"
            },
            "load_date": {
               "type": "string",
               "format": "date-time",
               "description": "Time stamp of data load"
            },
            "locator": {
               "type": "string",
               "description": "Locator of file containing loaded data"
            }
         },
         "required": [
            "datablock_name"
         ],
         "additionalProperties": false
      },
      "_entry_id": {
         "type": "string",
         "description": "Entry identifier for the container."
      },
      "_assembly_id": {
         "type": "string",
         "description": "The value of _pdbx_struct_assembly.id must uniquely identify a record in\n the PDBX_STRUCT_ASSEMBLY list."
      },
      "_schema_version": {
         "type": "string",
         "description": "Version string for the schema and collection."
      }
   },
   "additionalProperties": false,
   "required": [
      "_entry_id",
      "_assembly_id"
   ],
   "$id": "https://github.com/rcsb/py-rcsb.db/tree/master/rcsb.db/data/json-schema/json-schema-min-pdbx_core_assembly.json",
   "$schema": "http://json-schema.org/draft-04/schema#",
   "title": "schema: pdbx_core collection: pdbx_core_assembly version: 5.2.0",
   "description": "RCSB Exchange Database JSON schema derived from the pdbx_core content type schema. This schema supports collection pdbx_core_assembly version 5.2.0. This schema is hosted in repository https://github.com/rcsb/py-rcsb.db/tree/master/rcsb.db/data/json-schema/json-schema-min-pdbx_core_assembly.json and follows JSON schema specification version 4",
   "$comment": "schema_version: 5.2.0"
}