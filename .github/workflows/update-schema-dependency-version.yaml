name: Update Schema Version

on:
  workflow_call:
    inputs:
      schema-version:
        description: 'Schema version'
        type: string
        required: true
      downstream-repo-to-update:
        description: 'The name of the downstream repository for which to update the schema version'
        type: string
        required: true
      schema-property-name-in-repo:
        description: 'The property name in the repos pom.xml for the schema version, e.g. rcsb.mojave.model.version'
        type: string
        required: true
    # Secrets must be passed explicitly https://docs.github.com/en/enterprise-cloud@latest/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow
    secrets:
      RCSBSYSTEMSPAT:
        required: true

# NOTE the secret for PAT must be defined in the project where this script runs in (not in the project we are checking out)

jobs:
  update-version:
    runs-on:
      - self-hosted
      - java
    steps:
      - name: Checking out ${{ inputs.downstream-repo-to-update }}
        uses: actions/checkout@v4
        with:
          repository: rcsb/${{ inputs.downstream-repo-to-update }}
          token: ${{ secrets.RCSBSYSTEMSPAT }}
          path: ${{ inputs.downstream-repo-to-update }}
      - name: Setup git author information
        run: |
          cd ${{ inputs.downstream-repo-to-update }}
          git config user.name RCSBSystem
          git config user.email it@rcsb.org
      - run: mvn --version
      - name: Set new schema dependency version
        run: |
          cd ${{ inputs.downstream-repo-to-update }}
          mvn versions:set-property -Dproperty=${{ inputs.schema-property-name-in-repo }} -DnewVersion=${{ inputs.schema-version }} -DgenerateBackupPoms=false --no-transfer-progress
      - name: Commit and tag
        run: |
          cd ${{ inputs.downstream-repo-to-update }}
          git add pom.xml
          git commit -m "[automatic-schema-release] Updated schema dependency version to ${{ inputs.schema-version }}"
      - name: Push back to GitHub
        run: |
          cd ${{ inputs.downstream-repo-to-update }}
          git push --all
# from here workflow-java in each downstream repo will take over: it will do the commits necessary for release and for next dev cycle